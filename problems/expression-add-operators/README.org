* Leetcode: Expression Add Operators                            :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     divideconquer, expression
:END:
---------------------------------------------------------------------
Expression Add Operators
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/expression-add-operators"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-divideconquer][#divideconquer]], [[https://code.dennyzhang.com/followup-expression][#expression]]
---------------------------------------------------------------------
Given a string that contains only digits 0-9 and a target value, return all possibilities to add binary operators (not unary) +, -, or * between the digits so they evaluate to the target value.

Examples: 
#+BEGIN_EXAMPLE
"123", 6 -> ["1+2+3", "1*2*3"] 
"232", 8 -> ["2*3+2", "2+3*2"]
"105", 5 -> ["1*0+5","10-5"]
"00", 0 -> ["0+0", "0-0", "0*0"]
"3456237490", 9191 -> []
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/expression-add-operators][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/expression-add-operators/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC python
## https://code.dennyzhang.com/expression-add-operators
// Basic Ideas: backtracking
//
//  No leading 0
//  Avoid overflow
//  How to deal with 2+3*2, 2+3*2*4
//
// Complexity: Time ?, Space ?
import "strconv"
func dfs(combination string, pos int, res *[]string, num string, target int64, val int64, lastNum int64) {
    if pos == len(num) && val == target {
        *res = append(*res, string(combination))
        return
    }
    for i:=pos; i<len(num); i++ {
        // Invalid leading 0
        if num[pos] == '0' && i!=pos {
            break
        }
        // Take num[pos:i] as a value to operate
        v, _ := strconv.Atoi(num[pos:i+1])
        cur := int64(v)
        if pos == 0 {
            dfs(num[pos:i+1], i+1, res, num, target, cur, cur)
        } else {
            // add +
            dfs(combination+"+"+num[pos:i+1], i+1, res, num, target, val+cur, cur)
            // add -
            dfs(combination+"-"+num[pos:i+1], i+1, res, num, target, val-cur, -cur)
            // add *
            dfs(combination+"*"+num[pos:i+1], i+1, res, num, target, (val-lastNum)+lastNum*cur, lastNum*cur)
        }
    }
}

func addOperators(num string, target int) []string {
    res := []string{}
    dfs("", 0, &res, num, int64(target), int64(0), int64(0))
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
